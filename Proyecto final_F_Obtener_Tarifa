
#Ejercicio 1 Obligatorio

#1 Funciones almacenadas

USE bd_platvideo;

DROP FUNCTION IF EXISTS F_Obtener_Tarifa ;
delimiter //
CREATE FUNCTION F_Obtener_Tarifa (ID int, Tipo varchar(1)) RETURNS decimal(12,2) DETERMINISTIC
BEGIN
	DECLARE Resultado decimal (12,2);
#funcion para devolver el valor real
IF Tipo = 'r' THEN 
SET Resultado =(
	SELECT 
		valor_real  
	FROM tbl_tarifas
	WHERE id_tarifa = ID);
END IF;
#funcion para devolve el valor porcentual
IF Tipo = 'p' THEN
SET Resultado = (
	SELECT 
		valor_procentual  
	FROM tbl_tarifas 
	WHERE id_tarifa = ID);
END IF;
#devolver resultado
RETURN Resultado; 
END
//
delimiter ;

_______________________________________________________________________________

#Ejercicio #2 obligatorio
 #Procedimiento detalle

USE bd_platvideo;
DROP PROCEDURE IF EXISTS SP_Factura_Detalle ;

delimiter //
CREATE PROCEDURE SP_Factura_Detalle(
	#variables para el detalle de factura
	IN p_id_factura int,
	IN p_id_suscriptor int
)
BEGIN
	#variables para detalle de factura	
	DECLARE p_id_cargo int;
	DECLARE p_cantidad int;
	DECLARE p_concepto varchar(45);
	DECLARE p_monto decimal(12,2);
	DECLARE p_subtotal decimal(12,2);
	DECLARE p_isv decimal(12,2);
	DECLARE p_total_cargo decimal(12,2);
	DECLARE p_fecha_ingreso datetime;

#inicializando las variables
SET p_id_cargo = 1;

SET p_cantidad = (
	SELECT COUNT(idorden) FROM tbl_cartera tc 
	INNER JOIN tbl_catalogo tc2 ON tc.id_cat = tc2.id_cat
	WHERE estado = 'ACTIVO' AND id_suscriptor = p_id_suscriptor);

SET p_concepto = (
	SELECT titulo FROM tbl_cartera tc
	INNER JOIN tbl_catalogo tc2 ON tc.id_cat = tc2.id_cat
	WHERE estado = 'ACTIVO'AND id_suscriptor = p_id_suscriptor);

SET p_monto = (
	SELECT tc2.precio_venta FROM tbl_cartera tc
	INNER JOIN tbl_catalogo tc2 ON tc.id_cat = tc2.id_cat
	WHERE estado = 'ACTIVO'AND id_suscriptor = p_id_suscriptor);

SET p_subtotal = p_cantidad * p_monto;

SET p_isv = p_subtotal * (SELECT F_Obtener_Tarifa(1,'P'));

SET p_total_cargo = p_subtotal + p_isv;

SET p_fecha_ingreso = NOW();

#insertando los datos en la base de datos
INSERT tbl_fact_detalle 
(
	id_factura,
	id_cargo,
	cantidad,
	concepto,
	monto,
	subtotal,
	isv,
	total_cargo,
	fecha_ingreso
)
VALUES
(
	p_id_factura,
	p_id_cargo,
	p_cantidad,
	p_concepto,
	p_monto,
	p_subtotal,
	p_isv,
	p_total_cargo,
	p_fecha_ingreso
);

#actualizando totales de resumen de factura
UPDATE tbl_fact_resumen 
SET
	total_unidades = p_cantidad,
	subtotal_pagar = p_subtotal,
	isv_total = p_isv,
	total_pagar = p_total_cargo
WHERE id_factura = p_id_factura;

END
//
delimiter ;
________________________________________

#procedimiento Resumen
USE bd_platvideo;
DROP PROCEDURE IF EXISTS SP_Factura_Resumen;

delimiter //
CREATE PROCEDURE SP_Factura_Resumen (
	IN p_ID_Ciclo int,
	IN p_id_factura int,
	IN p_id_suscriptor int
)
BEGIN 
	#variables de resumen de factura
	DECLARE p_fecha_emision datetime;
	DECLARE p_fecha_vencimiento datetime;
	DECLARE p_total_unidades int;
	DECLARE p_subtotal_pagar decimal(12,2);
	DECLARE p_isv_total decimal(12,2);
	DECLARE p_total_pagar decimal(12,2);
	DECLARE p_tipo_pago varchar(45);
	DECLARE p_idorden int;
	
	#incializando las variables
	SET p_fecha_emision = NOW();
	SET p_fecha_vencimiento = CONVERT(CONCAT(YEAR(NOW()),'/',MONTH(NOW()),'/',(SELECT dia_calendario  FROM tbl_ciclos_facturacion WHERE idciclo = p_ID_Ciclo)),datetime);
	SET p_total_unidades = 0;
	SET p_subtotal_pagar = 0;
	SET p_isv_total = 0;
	SET p_total_pagar  = 0;
	SET p_tipo_pago = 'EFECTIVO';
	SET p_idorden = (
		SELECT idorden FROM tbl_cartera 
		WHERE id_suscriptor = p_id_suscriptor AND estado = 'ACTIVO');
	
	#insertado registro de factura
	INSERT tbl_fact_resumen
	(
	id_factura,
	fecha_emision, 
	fecha_vencimiento, 
	total_unidades, 
	subtotal_pagar, 
	isv_total, 
	total_pagar, 
	tipo_pago, 
	idorden
	)
	VALUES
	(
	p_id_factura, 
	p_fecha_emision,
	p_fecha_vencimiento,
	p_total_unidades,
	p_subtotal_pagar,
	p_isv_total,
	p_total_pagar,
	p_tipo_pago,
	p_idorden
	);

#llamando al procedimiento de detalle de factura
CALL SP_Factura_Detalle(p_id_factura , p_ID_Suscriptor);
END 
//
delimiter ;

_______________________________________________________________________________


#ejercicio 1 Parte dos crear subcriptor

USE bd_platvideo ;
DROP PROCEDURE IF EXISTS SP_Nuevo_Suscriptor;
delimiter //
CREATE PROCEDURE SP_Nuevo_Suscriptor (
	IN p_id_suscriptor int,
	IN p_nombres varchar(45),
	IN p_apellidos varchar(45),
	IN p_telefono varchar(45),
	IN p_email varchar(45),
	IN p_usuario varchar(45),
	IN p_contrasena varchar(400),
	IN p_fechanacimiento datetime,
	IN p_edad int,
	IN p_fecha_ingreso datetime,
	IN p_fecha_modificacion datetime,
	IN p_fecha_ultima_act datetime
	#IN p_idciclo int
)
BEGIN
DECLARE Dia_Ingreso int;
DECLARE Ultimo_Dia int;
DECLARE ciclo int;
DECLARE ID_Ciclo int;

SET Dia_Ingreso = DAY(p_fecha_ingreso);
SET Ultimo_Dia = DAY(LAST_DAY(NOW())); #calculando el ultimo dia del mes
SET ciclo = (Dia_Ingreso + 20) - Ultimo_Dia;
#SELECT Dia_Ingreso,Ultimo_Dia  ,ciclo;    el siguiente ciclo es para cuando sobre pasa el ultimo dia del mes
IF (Dia_Ingreso + 20) > Ultimo_Dia THEN 
SET ID_Ciclo = (
	SELECT idciclo  
	FROM tbl_ciclos_facturacion 
	WHERE  idciclo = (
		SELECT MIN(idciclo) # tomando el primer registro de la misma tabla
		FROM tbl_ciclos_facturacion
		WHERE dia_calendario >= ciclo)
	);
END IF;
# es para cuando el rago esta dentro del mismo mes
IF (Dia_Ingreso + 20) < Ultimo_Dia THEN
SET ID_Ciclo = (
	SELECT idciclo  
	FROM tbl_ciclos_facturacion 
	WHERE  idciclo = (
		SELECT MIN(idciclo) 
		FROM tbl_ciclos_facturacion
		WHERE dia_calendario >= (Dia_Ingreso + 20))  # para encontar el di del mismo mes
	);

END IF;
#insertando el nuevo suscriptor
	INSERT tbl_suscriptores
	(
	id_suscriptor,
	nombres,
	apellidos,
	telefono,
	email,
	usuario,
	contrasena,
	fechanacimiento,
	edad,
	fecha_inrgreso ,
	fecha_modificacion,
	fecha_ultima_act,
	idciclo	
	)
	VALUES
	(
	p_id_suscriptor,
	p_nombres,
	p_apellidos,
	p_telefono,
	p_email,
	p_usuario,
	p_contrasena,
	p_fechanacimiento, 
	p_edad,
	p_fecha_ingreso,
	p_fecha_modificacion,
	p_fecha_ultima_act,
	ID_Ciclo # variable calculada
	);

END//
delimiter ;


